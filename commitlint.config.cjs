module.exports = {
  parserPreset: 'conventional-changelog-conventionalcommits',
  rules: {
    'body-leading-blank': [1, 'always'],
    'body-max-line-length': [2, 'always', 100],
    'footer-leading-blank': [1, 'always'],
    'footer-max-line-length': [2, 'always', 100],
    'header-max-length': [2, 'always', 100],
    'subject-case': [2, 'never', ['sentence-case', 'start-case', 'pascal-case', 'upper-case']],
    'subject-empty': [2, 'never'],
    'subject-full-stop': [2, 'never', '.'],
    'type-case': [2, 'always', 'lower-case'],
    'type-empty': [2, 'never'],
    'type-enum': [
      2,
      'always',
      ['build', 'chore', 'ci', 'docs', 'feat', 'fix', 'perf', 'refactor', 'revert', 'style', 'test'],
    ],
  },
  prompt: {
    questions: {
      type: {
        description: "Select the type of change that you're committing",
        enum: {
          feat: { description: 'A new feature', title: 'Features', emoji: '✨' },
          fix: { description: 'A bug fix', title: 'Bug Fixes', emoji: '🐛' },
          docs: { description: 'Documentation only changes', title: 'Documentation', emoji: '📚' },
          style: { description: 'Code style changes (formatting, etc.)', title: 'Styles', emoji: '💎' },
          refactor: { description: 'Refactoring code', title: 'Refactoring', emoji: '📦' },
          perf: { description: 'Performance improvements', title: 'Performance', emoji: '🚀' },
          test: { description: 'Adding or fixing tests', title: 'Tests', emoji: '🚨' },
          build: { description: 'Build system changes', title: 'Builds', emoji: '🛠' },
          ci: { description: 'CI/CD changes', title: 'CI/CD', emoji: '⚙️' },
          chore: { description: 'Miscellaneous tasks', title: 'Chores', emoji: '♻️' },
          revert: { description: 'Reverting a commit', title: 'Reverts', emoji: '🗑' },
        },
      },
      scope: { description: 'What is the scope of this change (e.g. component or file name)' },
      subject: { description: 'Write a short, imperative description of the change' },
      body: { description: 'Provide a longer description of the change' },
      isBreaking: { description: 'Are there any breaking changes?' },
      breakingBody: { description: 'Describe the breaking changes' },
      breaking: { description: 'Explain the breaking changes' },
      isIssueAffected: { description: 'Does this change affect any open issues?' },
      issuesBody: { description: 'Provide a longer description if issues are closed' },
      issues: { description: 'Add issue references (e.g. "fix #123", "re #123").' },
    },
  },
};
